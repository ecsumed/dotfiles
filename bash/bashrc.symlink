# ~/.bashrc: executed by bash(1) for non-login shells.

# Functions {{{ 

# get current branch in git repo 
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]
    then
        STAT=`parse_git_dirty`
        echo "[${BRANCH}${STAT}]"
    else
        echo ""
    fi
}
 
# get current status of git repo
function parse_git_dirty {
    status=`git status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
    ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
    renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
    bits=''
    if [ "${renamed}" == "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="!${bits}"
    fi
    if [ ! "${bits}" == "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}
# }}}

# Aliases {{{ 

# Prevents accidentally clobbering files.
alias mkdir='mkdir -p'

# Makes a more readable output.
alias du='du -kh'
alias df='df -kTh'

alias ls='ls -h --color'
alias lx='ls -lXB'         #  Sort by extension.
alias lk='ls -lSr'         #  Sort by size, biggest last.
alias lt='ls -ltr'         #  Sort by date, most recent last.
alias lc='ls -ltcr'        #  Sort by/show change time,most recent last.
alias lu='ls -ltur'        #  Sort by/show access time,most recent last.

# The ubiquitous 'll': directories first, with alphanumeric sorting:
alias ll="ls -lav --group-directories-first"

alias lm='ll |more'        #  Pipe through 'more'
alias lr='ll -R'           #  Recursive ls.
alias la='ll -A'           #  Show hidden files.
alias tree='tree -Csuh'    #  Nice alternative to 'recursive ls' ...

alias tmux='tmux -2'       # for tmux color suppport

alias vimresolve='sudo vim /etc/resolv.conf'
alias torchrome='chromium-browser --proxy-server="socks5://127.0.0.1:9050" --incognito'

alias cdcloud='cd /home/fahad/Workpace/Cloudways/'
alias cdsmart='cd /home/fahad/Workpace/SmartDNS/'

alias sshid='ssh -i ~/.ssh/id_rsa'
alias sshcng='ssh -i ~/.ssh/id_rsa'
alias sshidusdns='ssh -i ~/.ssh/id_rsa -C -p61 107.168.129.2'
alias sshidukdns='ssh -i ~/.ssh/id_rsa -C -p61 46.23.70.70'
alias sshidmydo='ssh -p61 -i ~/.ssh/id_rsa_myDO fahad@104.236.10.170'

alias vproxytunnel='ssh -i ~/.ssh/id_rsa -NfD 1080 -p61 cw-devs@52.23.145.178'

alias vproxysensu='vproxy 52.71.89.40'
alias vproxysensu2='vproxy 52.4.64.101'
alias vproxyveremis='vproxy 52.70.0.223'
alias vproxystaging='vproxy 52.21.0.48'
alias vproxyapi='vproxy 54.85.213.165'
alias vproxyapi2='vproxy 52.5.120.0'

alias tmux='tmux -2'       # for tmux color suppport
  
# my external ip
alias wanip='dig +short myip.opendns.com @resolver1.opendns.com'

# execute last command with sudo 
alias fuck='sudo $(history -p \!\!)'
# }}}

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Settings {{{ 
# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth
HISTIGNORE='ls*:exit:clear:weather *'

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=5000
HISTFILESIZE=5000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Prevents accidentally clobbering files.
set -o noclobber

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi
# }}} 

PS1="\[\e[1;32m\][\[\e[m\]\[\e[1;32m\]\T\[\e[m\]\[\e[1;32m\]]\[\e[m\]\[\e[1;32m\]\u\[\e[m\]\[\e[1;32m\]@\[\e[m\]\[\e[1;32m\]\h\[\e[m\]\[\e[1;32m\]:\[\e[1;37m\]\w\[\e[1;31m\]\`parse_git_branch\`\[\e[m\]\[\e[1;32m\]\\$\[\e[m\] "
    #PS1="\[$BGreen\][\T]\u@\h:\[$BWhite\]\w\[$BRed\]\`parse_git_branch\`\[$BGreen\]\n\$ \[$NC\]"
PS2="\[$BGreen\]> \[$NC\]"


# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
# }}} 

# vim:foldmethod=marker:foldlevel=0
